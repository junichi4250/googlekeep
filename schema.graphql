type Note {
  text: String!
  isCompleted: Boolean!
}

type Label {
  id: ID!
  name: String!
}

type Todo {
  id: ID!
  title: String!
  notes: [Note!]!
  labels: [Label!]!
  color: String!
  isCheckboxMode: Boolean!
}

input NotesInput {
  text: String!
  isCompleted: Boolean!
}

enum Action {
  CREATED
  DELETED
  UPDATED
}

type TodoAction {
  action: Action!,
  todo: Todo!
}

type LabelAction {
  action: Action!,
  label: Label!
}

type User {
  id: ID!
  name: String!
  email: String!
  listMode: Boolean!
  darkMode: Boolean!
}

type Query {
  todos: [Todo!]!
  labels: [Label!]!
  user: User!
}

type Mutation {
  createTodo(title: String!, notes: [String!]!, labels: [ID]!, color: String, isCheckboxMode: Boolean): Todo
  updateTodo(id: ID!, title: String, notes: [NotesInput], labels: [ID], color: String, isCheckboxMode: Boolean): Todo
  deleteTodo(id: ID!): Todo
  copyTodo(sourceId: ID!): Todo
  createLabel(name: String!): Label
  deleteLabel(id: ID!): Label
  updateUser(listMode: Boolean, darkMode: Boolean): User
}

type Subscription {
  todoStream: TodoAction!
  labelStream: LabelAction!
}